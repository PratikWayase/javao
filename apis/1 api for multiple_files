const express = require('express');
const multer = require('multer');
const path = require('path');
const app = express();

// Allowed file extensions
const allowedExtensions = ['.pdf', '.ppt', '.pptx', '.mp4'];
const maxFileSize = 100 * 1024 * 1024; // 100MB

// Storage config
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'uploads/materials/');
  },
  filename: function (req, file, cb) {
    const safeName = Date.now() + '-' + Math.round(Math.random() * 1E9) + path.extname(file.originalname);
    cb(null, safeName);
  }
});

// Multer config for multiple uploads
const upload = multer({ 
  storage,
  limits: { fileSize: maxFileSize },
  fileFilter: function (req, file, cb) {
    const ext = path.extname(file.originalname).toLowerCase();
    if (!allowedExtensions.includes(ext)) {
      return cb(new Error('Only PDF, PPT, and MP4 files are allowed.'));
    }
    cb(null, true);
  }
});

// Upload multiple files - max 5
app.post('/upload-materials', upload.array('materials', 5), (req, res) => {
  if (!req.files || req.files.length === 0) {
    return res.status(400).json({ error: 'No files uploaded' });
  }

  res.json({
    message: 'Materials uploaded successfully!',
    files: req.files.map(file => ({
      originalName: file.originalname,
      storedName: file.filename,
      size: file.size,
      type: file.mimetype
    }))
  });
});

// Error handling middleware (for multer errors)
app.use((err, req, res, next) => {
  if (err instanceof multer.MulterError) {
    return res.status(400).json({ error: err.message });
  } else if (err) {
    return res.status(400).json({ error: err.message });
  }
  next();
});

// Start server
app.listen(3000, () => console.log('Server running on http://localhost:3000'));
